//Auto-generated by RSP Compiler
//Source: traceSearchView.rsp.html
part of trails;

/** Template, traceSearchView, for rendering the view. */
Future traceSearchView(HttpConnect connect, {lightTraceRenderers,traceFormRenderer}) { //#2
  var _t0_, _cs_ = new List<HttpConnect>();
  HttpRequest request = connect.request;
  HttpResponse response = connect.response;
  if (!Rsp.init(connect, "text/html; charset=utf-8"))
    return new Future.value();

  response.write("""<!DOCTYPE html>
<html>
 <head>
     <title>La Boussole - Rechercher une trace gps</title>
"""); //#2

  return connect.include("/rsp/templates/assetsimports.html").then((_) { //include#6

    response.write("""  </head>
  <body>   
"""); //#7

    var _0 = new StringBuffer(); _cs_.add(connect); //var#10
    connect = new HttpConnect.stringBuffer(connect, _0); response = connect.response;

    response.write("""        <h1>Rechercher une trace gps</h1>
"""); //#11

    return Rsp.nnf(searchForm(new HttpConnect.chain(connect), traceFormRenderer: traceFormRenderer)).then((_) { //include#12

      connect = _cs_.removeLast(); response = connect.response;

      var _1 = new StringBuffer(); _cs_.add(connect); //var#14
      connect = new HttpConnect.stringBuffer(connect, _1); response = connect.response;

      return Rsp.nnf(searchResults(new HttpConnect.chain(connect))).then((_) { //include#15

        connect = _cs_.removeLast(); response = connect.response;

        var _2 = new StringBuffer(); _cs_.add(connect); //var#17
        connect = new HttpConnect.stringBuffer(connect, _2); response = connect.response;

        return Rsp.nnf(searchResultsOnMap(new HttpConnect.chain(connect), lightTraceRenderers: lightTraceRenderers)).then((_) { //include#18

          connect = _cs_.removeLast(); response = connect.response;

          return Rsp.nnf(spaces(new HttpConnect.chain(connect), w: _0.toString(), ne: _1.toString(), se: _2.toString())).then((_) { //include#9

            response.write("""    
"""); //#21

            return Rsp.nnf(sharedWidgets(new HttpConnect.chain(connect), sharedWidgetsId: "sharedWidgets")).then((_) { //include#22

              response.write("""    
    <script type="application/dart" src="/client/pages/traceSearch.dart"></script>
    <script src="/packages/browser/dart.js"></script>
  </body>
</html>
"""); //#23

              return new Future.value();
            }); //end-of-include
          }); //end-of-include
        }); //end-of-include
      }); //end-of-include
    }); //end-of-include
  }); //end-of-include
}
