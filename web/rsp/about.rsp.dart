//Auto-generated by RSP Compiler
//Source: about.rsp.html
part of trails;

/** Template, about, for rendering the view. */
Future about(HttpConnect connect) { //#2
  var _t0_, _cs_ = new List<HttpConnect>();
  HttpRequest request = connect.request;
  HttpResponse response = connect.response;
  if (!Rsp.init(connect, "text/html; charset=utf-8"))
    return new Future.value();

  response.write("""<!DOCTYPE html>
<html>
 <head>
     <title>A propos de la-boussole</title>
"""); //#2

  return connect.include("/rsp/templates/assetsimports.html").then((_) { //include#6

    response.write("""  </head>
  <body>   
"""); //#7

    var _0 = new StringBuffer(); _cs_.add(connect); //var#10
    connect = new HttpConnect.stringBuffer(connect, _0); response = connect.response;

    response.write("""           <h1>A propos de la-boussole</h1>
           <div class="text-warning  form-error-message" >Cette application est actuellement en construction.</div>
        
           <h2>Le propos</h2>
           <div class="text-warning  form-error-message" >En construction : texte rappellant le but de cette application ainsi que les mentions légales de l'utilisation des données.</div>

"""); //#11

    connect = _cs_.removeLast(); response = connect.response;

    var _1 = new StringBuffer(); _cs_.add(connect); //var#18
    connect = new HttpConnect.stringBuffer(connect, _1); response = connect.response;

    response.write("""           <h2>Derriere la scène</h2>
           <div class="text-warning  form-error-message" >En construction : texte présentant les enjeux techniques de construction et d'évolution de l'application.</div>
            
"""); //#19

    connect = _cs_.removeLast(); response = connect.response;

    var _2 = new StringBuffer(); _cs_.add(connect); //var#23
    connect = new HttpConnect.stringBuffer(connect, _2); response = connect.response;

    response.write("""           <h2>Retour</h2>
           <div class="text-warning  form-error-message" >En construction : permettre aux utilisateurs de remonter des bugs ou de proposer des améliorations.</div>

            
"""); //#24

    connect = _cs_.removeLast(); response = connect.response;

    var _3 = new StringBuffer(); _cs_.add(connect); //var#29
    connect = new HttpConnect.stringBuffer(connect, _3); response = connect.response;

    response.write("""           <h2>Auteur</h2>
           <div class="text-warning  form-error-message" >En construction : texte présentant l'auteur de l'application.</div>
       
"""); //#30

    connect = _cs_.removeLast(); response = connect.response;

    return Rsp.nnf(spaces(new HttpConnect.chain(connect), nw: _0.toString(), ne: _1.toString(), sw: _2.toString(), se: _3.toString())).then((_) { //include#9

      response.write("""    <script type="application/dart" src="/client/index.dart"></script>
    <script src="/packages/browser/dart.js"></script>
  </body>
</html>"""); //#35

      return new Future.value();
    }); //end-of-include
  }); //end-of-include
}
