//Auto-generated by RSP Compiler
//Source: traceView.rsp.html
part of trails;

/** Template, traceView, for rendering the view. */
Future traceView(HttpConnect connect, {traceRenderer}) { //#2
  var _t0_, _cs_ = new List<HttpConnect>();
  HttpRequest request = connect.request;
  HttpResponse response = connect.response;
  if (!Rsp.init(connect, "text/html; charset=utf-8"))
    return new Future.value();

  response.write("""<!DOCTYPE html>
<html>
 <head>
   <title>La Boussole - """); //#2

  response.write(Rsp.nnx(traceRenderer.trace.title)); //#5


  response.write("""</title>
"""); //#5

  return connect.include("/rsp/templates/assetsimports.html").then((_) { //include#6

    response.write("""  </head>
  <body>   
"""); //#7

    var _0 = new StringBuffer(); _cs_.add(connect); //var#10
    connect = new HttpConnect.stringBuffer(connect, _0); response = connect.response;

    return Rsp.nnf(traceDisplayTextFragment(new HttpConnect.chain(connect), traceRenderer: traceRenderer)).then((_) { //include#11

      connect = _cs_.removeLast(); response = connect.response;

      var _1 = new StringBuffer(); _cs_.add(connect); //var#13
      connect = new HttpConnect.stringBuffer(connect, _1); response = connect.response;

      return Rsp.nnf(traceDisplayProfileFragment(new HttpConnect.chain(connect), traceRenderer: traceRenderer)).then((_) { //include#14

        connect = _cs_.removeLast(); response = connect.response;

        var _2 = new StringBuffer(); _cs_.add(connect); //var#16
        connect = new HttpConnect.stringBuffer(connect, _2); response = connect.response;

        return Rsp.nnf(traceDisplayStatFragment(new HttpConnect.chain(connect), traceRenderer: traceRenderer)).then((_) { //include#17

          connect = _cs_.removeLast(); response = connect.response;

          var _3 = new StringBuffer(); _cs_.add(connect); //var#19
          connect = new HttpConnect.stringBuffer(connect, _3); response = connect.response;

          connect = _cs_.removeLast(); response = connect.response;

          return Rsp.nnf(spaces(new HttpConnect.chain(connect), nw: _0.toString(), ne: _1.toString(), sw: _2.toString(), se: _3.toString())).then((_) { //include#9

            response.write("""    
    <div class="space-contextual-menu"  >
        <ul role="menu" class="dropdown-menu"  id="contextual-menu">
          <li role="presentation" class="dropdown-header">Trace gps</li>
          <li role="presentation"><a href=\""""); //#22

            response.write(Rsp.nnx(traceRenderer.gpxUrl)); //#26


            response.write("""" tabindex="-1" role="menuitem">Fichier gpx</a></li>
"""); //#26

            if (currentUser(request.session) != null && ( currentUser(request.session).login == traceRenderer.trace.creator || currentUser(request.session).admin   )) { //if#27

              response.write("""            <li role="presentation"><a class="trace-delete-menu gx-as-link"  tabindex="-1" role="menuitem">Supprimer</a></li>
"""); //#28
            } //if

            response.write("""       </ul>
    </div>
    
"""); //#30

            return Rsp.nnf(confirmWidget(new HttpConnect.chain(connect), confirmId: "deleteConfirmModal", confirmTitle: "Confirmation", confirmText: "Je confirme la suppression d√©finitive de la trace ${Rsp.nns(traceRenderer.trace.title)}")).then((_) { //include#33

              return Rsp.nnf(sharedWidgets(new HttpConnect.chain(connect), sharedWidgetsId: "sharedWidgets")).then((_) { //include#34

                response.write("""    
    <script type="application/dart" src="/client/pages/traceDetails.dart"></script>
    <script src="/packages/browser/dart.js"></script>
    <script src="/packages/browser/interop.js"></script>
  </body>
</html>
"""); //#35

                return new Future.value();
              }); //end-of-include
            }); //end-of-include
          }); //end-of-include
        }); //end-of-include
      }); //end-of-include
    }); //end-of-include
  }); //end-of-include
}
