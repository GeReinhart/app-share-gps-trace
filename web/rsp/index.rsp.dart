//Auto-generated by RSP Compiler
//Source: index.rsp.html
part of trails;

/** Template, index, for rendering the view. */
Future index(HttpConnect connect, {lightTraceRenderers,traceFormRenderer}) { //#2
  var _t0_, _cs_ = new List<HttpConnect>();
  HttpRequest request = connect.request;
  HttpResponse response = connect.response;
  if (!Rsp.init(connect, "text/html; charset=utf-8"))
    return new Future.value();

  response.write("""<!DOCTYPE html>
<html>
 <head>
     <title>La Boussole</title>
"""); //#2

  return connect.include("/rsp/templates/assetsimports.html").then((_) { //include#6

    response.write("""  </head>
  <body>   
"""); //#7

    var _0 = new StringBuffer(); _cs_.add(connect); //var#10
    connect = new HttpConnect.stringBuffer(connect, _0); response = connect.response;

    return Rsp.nnf(loadingWidget(new HttpConnect.chain(connect), loadingId: "loadingW", size: "50")).then((_) { //include#11

      response.write("""        <div id="trace_searchW" class="gx-hidden" >
"""); //#12

      return Rsp.nnf(traceSearchFormFragment(new HttpConnect.chain(connect), traceFormRenderer: traceFormRenderer)).then((_) { //include#13

        response.write("""        </div>
"""); //#14

        connect = _cs_.removeLast(); response = connect.response;

        var _1 = new StringBuffer(); _cs_.add(connect); //var#16
        connect = new HttpConnect.stringBuffer(connect, _1); response = connect.response;

        return Rsp.nnf(loadingWidget(new HttpConnect.chain(connect), loadingId: "loadingNW", size: "50")).then((_) { //include#17

          response.write("""        <div id="disclaimerNW" class="gx-hidden" ></div>
        <div id="indexNW"      class="gx-hidden" ></div>
        <div id="aboutNW"      class="gx-hidden" ></div>
        <div id="trace_formNW" class="gx-hidden" ></div>
        <div id="trace_detailsNW" class="gx-hidden" >
"""); //#18

          return Rsp.nnf(traceDisplayTextFragment(new HttpConnect.chain(connect))).then((_) { //include#23

            response.write("""        </div>
"""); //#24

            connect = _cs_.removeLast(); response = connect.response;

            var _2 = new StringBuffer(); _cs_.add(connect); //var#26
            connect = new HttpConnect.stringBuffer(connect, _2); response = connect.response;

            return Rsp.nnf(loadingWidget(new HttpConnect.chain(connect), loadingId: "loadingNE", size: "50")).then((_) { //include#27

              response.write("""        <div id="aboutNE" class="gx-hidden" ></div>
        <div id="trace_searchNE" class="gx-hidden" >
"""); //#28

              return Rsp.nnf(traceSearchResultsFragment(new HttpConnect.chain(connect))).then((_) { //include#30

                response.write("""        </div>
        <div id="traceNE" class="gx-hidden" ></div>
        <div id="trace_detailsNE" class="gx-hidden"   >
           
        </div>        
"""); //#31

                connect = _cs_.removeLast(); response = connect.response;

                var _3 = new StringBuffer(); _cs_.add(connect); //var#37
                connect = new HttpConnect.stringBuffer(connect, _3); response = connect.response;

                return Rsp.nnf(loadingWidget(new HttpConnect.chain(connect), loadingId: "loadingSW", size: "50")).then((_) { //include#38

                  response.write("""        <div id="indexSW"      class="gx-hidden" >
"""); //#39

                  return Rsp.nnf(indexButtonsFragment(new HttpConnect.chain(connect))).then((_) { //include#40

                    response.write("""        </div>        
        <div id="aboutSW"      class="gx-hidden" ></div>
        <div id="trace_detailsSW" class="gx-hidden" >
"""); //#41

                    return Rsp.nnf(traceDisplayStatFragment(new HttpConnect.chain(connect))).then((_) { //include#44

                      response.write("""        </div>
"""); //#45

                      connect = _cs_.removeLast(); response = connect.response;

                      var _4 = new StringBuffer(); _cs_.add(connect); //var#47
                      connect = new HttpConnect.stringBuffer(connect, _4); response = connect.response;

                      return Rsp.nnf(loadingWidget(new HttpConnect.chain(connect), loadingId: "loadingSE", size: "50")).then((_) { //include#48

                        response.write("""        <div id="aboutSE"      class="gx-hidden" ></div>        
        <div id="trace_detailsSE" class="gx-hidden-map" >
"""); //#49

                        return Rsp.nnf(traceDisplayMapFragment(new HttpConnect.chain(connect))).then((_) { //include#51

                          response.write("""        </div>
        <div id="trace_searchSE" >
"""); //#52

                          return Rsp.nnf(traceSearchMapFragment(new HttpConnect.chain(connect))).then((_) { //include#54

                            response.write("""        </div>
"""); //#55

                            connect = _cs_.removeLast(); response = connect.response;

                            return Rsp.nnf(spaces(new HttpConnect.chain(connect), w: _0.toString(), nw: _1.toString(), ne: _2.toString(), sw: _3.toString(), se: _4.toString())).then((_) { //include#9

                              response.write("""    
    
"""); //#58

                              return Rsp.nnf(confirmWidget(new HttpConnect.chain(connect), confirmId: "deleteTraceConfirmModal", confirmTitle: "Confirmation", confirmText: "Je confirme la suppression d√©finitive de la trace XXXXXXXXXXXXXXX")).then((_) { //include#60

                                response.write("""    
"""); //#61

                                return Rsp.nnf(sharedWidgets(new HttpConnect.chain(connect), sharedWidgetsId: "sharedWidgets")).then((_) { //include#62

                                  response.write("""    
    <script type="application/dart" src="/client/pages/index.dart"></script>
    <script src="/packages/browser/dart.js"></script>
    <script src="/packages/browser/interop.js"></script>    
  </body>
</html>"""); //#63

                                  return new Future.value();
                                }); //end-of-include
                              }); //end-of-include
                            }); //end-of-include
                          }); //end-of-include
                        }); //end-of-include
                      }); //end-of-include
                    }); //end-of-include
                  }); //end-of-include
                }); //end-of-include
              }); //end-of-include
            }); //end-of-include
          }); //end-of-include
        }); //end-of-include
      }); //end-of-include
    }); //end-of-include
  }); //end-of-include
}
